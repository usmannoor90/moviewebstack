{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usman\\\\Desktop\\\\webstack\\\\movieweb\\\\src\\\\Components\\\\Discover.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MoviePoster from \"./MoviePoster\";\nimport \"../Styling/home.css\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\n// Default theme\nimport \"@splidejs/react-splide/css\";\n\n// or other themes\nimport \"@splidejs/react-splide/css/skyblue\";\nimport \"@splidejs/react-splide/css/sea-green\";\n\n// or only core styles\nimport \"@splidejs/react-splide/css/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discover() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const API_Url = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMBD_KEY}`;\n  useEffect(() => {\n    getMovies();\n    setLoading(false);\n  }, []);\n  async function getMovies() {\n    const api = await fetch(API_Url);\n    const result = await api.json();\n    setMovie(result.results);\n    console.log(result.results);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      maxWidth: \"1500px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-5 \",\n      style: {\n        marginLeft: \"3rem\"\n      },\n      children: [\" \", \"Discover Movies\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Splide, {\n      options: {\n        gap: \"0.5rem 1rem\",\n        perPage: 4,\n        arrows: false,\n        breakpoints: {\n          992: {\n            perPage: 2\n          },\n          557: {\n            perPage: 1\n          }\n        }\n      },\n      children: movie === null || movie === void 0 ? void 0 : movie.map(data => {\n        return /*#__PURE__*/_jsxDEV(SplideSlide, {\n          children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n            ...data\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Discover, \"oH1nagovWNIURVqvgr7OJKbneVg=\");\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["React","useEffect","useState","MoviePoster","Splide","SplideSlide","jsxDEV","_jsxDEV","Discover","_s","movie","setMovie","loading","setLoading","API_Url","process","env","REACT_APP_TMBD_KEY","getMovies","api","fetch","result","json","results","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","maxWidth","marginLeft","options","gap","perPage","arrows","breakpoints","map","data","id","_c","$RefreshReg$"],"sources":["C:/Users/Usman/Desktop/webstack/movieweb/src/Components/Discover.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport \"../Styling/home.css\";\r\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\r\n// Default theme\r\nimport \"@splidejs/react-splide/css\";\r\n\r\n// or other themes\r\nimport \"@splidejs/react-splide/css/skyblue\";\r\nimport \"@splidejs/react-splide/css/sea-green\";\r\n\r\n// or only core styles\r\nimport \"@splidejs/react-splide/css/core\";\r\nfunction Discover() {\r\n  const [movie, setMovie] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const API_Url = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMBD_KEY}`;\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  async function getMovies() {\r\n    const api = await fetch(API_Url);\r\n    const result = await api.json();\r\n    setMovie(result.results);\r\n    console.log(result.results);\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\" style={{ maxWidth: \"1500px\" }}>\r\n      <h2 className=\"mt-5 \" style={{ marginLeft: \"3rem\" }}>\r\n        {\" \"}\r\n        Discover Movies\r\n      </h2>\r\n\r\n      <Splide\r\n        options={{\r\n          gap: \"0.5rem 1rem\",\r\n          perPage: 4,\r\n          arrows: false,\r\n          breakpoints: {\r\n            992: {\r\n              perPage: 2,\r\n            },\r\n            557: {\r\n              perPage: 1,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {movie?.map((data: any) => {\r\n          return (\r\n            <SplideSlide key={data.id}>\r\n              <MoviePoster key={data.id} {...data} />\r\n            </SplideSlide>\r\n          );\r\n        })}\r\n      </Splide>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Discover;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,qBAAqB;AAC5B,SAASC,MAAM,EAAEC,WAAW,QAAQ,wBAAwB;AAC5D;AACA,OAAO,4BAA4B;;AAEnC;AACA,OAAO,oCAAoC;AAC3C,OAAO,sCAAsC;;AAE7C;AACA,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC;EAC7C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMY,OAAO,GAAI,uDAAsDC,OAAO,CAACC,GAAG,CAACC,kBAAmB,EAAC;EAEvGhB,SAAS,CAAC,MAAM;IACdiB,SAAS,CAAC,CAAC;IACXL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeK,SAASA,CAAA,EAAG;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,OAAO,CAAC;IAChC,MAAMO,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC/BX,QAAQ,CAACU,MAAM,CAACE,OAAO,CAAC;IACxBC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC;EAC7B;EAEA,IAAIX,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAmB,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3B;EAEA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAAP,QAAA,gBAC7DnB,OAAA;MAAIwB,SAAS,EAAC,OAAO;MAACC,KAAK,EAAE;QAAEE,UAAU,EAAE;MAAO,CAAE;MAAAR,QAAA,GACjD,GAAG,EAAC,iBAEP;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELvB,OAAA,CAACH,MAAM;MACL+B,OAAO,EAAE;QACPC,GAAG,EAAE,aAAa;QAClBC,OAAO,EAAE,CAAC;QACVC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;UACX,GAAG,EAAE;YACHF,OAAO,EAAE;UACX,CAAC;UACD,GAAG,EAAE;YACHA,OAAO,EAAE;UACX;QACF;MACF,CAAE;MAAAX,QAAA,EAEDhB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE8B,GAAG,CAAEC,IAAS,IAAK;QACzB,oBACElC,OAAA,CAACF,WAAW;UAAAqB,QAAA,eACVnB,OAAA,CAACJ,WAAW;YAAA,GAAmBsC;UAAI,GAAjBA,IAAI,CAACC,EAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa;QAAC,GADvBW,IAAI,CAACC,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CAAC;MAElB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CArDQD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAuDjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}