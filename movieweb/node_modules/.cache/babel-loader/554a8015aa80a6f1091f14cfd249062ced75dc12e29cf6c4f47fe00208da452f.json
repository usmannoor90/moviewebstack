{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usman\\\\Desktop\\\\webstack\\\\movieweb\\\\src\\\\Components\\\\Discover.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MoviePoster from \"./MoviePoster\";\nimport \"../Styling/home.css\";\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\n// Default theme\nimport \"@splidejs/react-splide/css\";\n\n// or other themes\nimport \"@splidejs/react-splide/css/skyblue\";\nimport \"@splidejs/react-splide/css/sea-green\";\n\n// or only core styles\nimport \"@splidejs/react-splide/css/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Discover() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const API_Url = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMBD_KEY}`;\n  useEffect(() => {\n    getMovies();\n    setLoading(false);\n  }, []);\n  async function getMovies() {\n    const api = await fetch(API_Url);\n    const result = await api.json();\n    setMovie(result.results);\n    console.log(result.results);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid \",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Discover Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(Splide, {\n        options: {\n          gap: \"1rem\",\n          perPage: 4,\n          arrows: false,\n          breakpoints: {\n            992: {\n              perPage: 2\n            },\n            557: {\n              perPage: 1\n            }\n          }\n        },\n        children: movie === null || movie === void 0 ? void 0 : movie.map(data => {\n          return /*#__PURE__*/_jsxDEV(SplideSlide, {\n            children: /*#__PURE__*/_jsxDEV(MoviePoster, {\n              ...data\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Discover, \"oH1nagovWNIURVqvgr7OJKbneVg=\");\n_c = Discover;\nexport default Discover;\nvar _c;\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["React","useEffect","useState","MoviePoster","Splide","SplideSlide","jsxDEV","_jsxDEV","Discover","_s","movie","setMovie","loading","setLoading","API_Url","process","env","REACT_APP_TMBD_KEY","getMovies","api","fetch","result","json","results","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","gap","perPage","arrows","breakpoints","map","data","id","_c","$RefreshReg$"],"sources":["C:/Users/Usman/Desktop/webstack/movieweb/src/Components/Discover.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport \"../Styling/home.css\";\r\nimport { Splide, SplideSlide } from \"@splidejs/react-splide\";\r\n// Default theme\r\nimport \"@splidejs/react-splide/css\";\r\n\r\n// or other themes\r\nimport \"@splidejs/react-splide/css/skyblue\";\r\nimport \"@splidejs/react-splide/css/sea-green\";\r\n\r\n// or only core styles\r\nimport \"@splidejs/react-splide/css/core\";\r\nfunction Discover() {\r\n  const [movie, setMovie] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const API_Url = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMBD_KEY}`;\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  async function getMovies() {\r\n    const api = await fetch(API_Url);\r\n    const result = await api.json();\r\n    setMovie(result.results);\r\n    console.log(result.results);\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid \">\r\n      <h2> Discover Movies</h2>\r\n      <div className=\"\">\r\n        <Splide\r\n          options={{\r\n            gap: \"1rem\",\r\n            perPage: 4,\r\n            arrows: false,\r\n            breakpoints: {\r\n              992: {\r\n                perPage: 2,\r\n              },\r\n              557: {\r\n                perPage: 1,\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          {movie?.map((data: any) => {\r\n            return (\r\n              <SplideSlide key={data.id}>\r\n                <MoviePoster key={data.id} {...data} />\r\n              </SplideSlide>\r\n            );\r\n          })}\r\n        </Splide>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Discover;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,qBAAqB;AAC5B,SAASC,MAAM,EAAEC,WAAW,QAAQ,wBAAwB;AAC5D;AACA,OAAO,4BAA4B;;AAEnC;AACA,OAAO,oCAAoC;AAC3C,OAAO,sCAAsC;;AAE7C;AACA,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC;EAC7C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMY,OAAO,GAAI,uDAAsDC,OAAO,CAACC,GAAG,CAACC,kBAAmB,EAAC;EAEvGhB,SAAS,CAAC,MAAM;IACdiB,SAAS,CAAC,CAAC;IACXL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeK,SAASA,CAAA,EAAG;IACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,OAAO,CAAC;IAChC,MAAMO,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC/BX,QAAQ,CAACU,MAAM,CAACE,OAAO,CAAC;IACxBC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAACE,OAAO,CAAC;EAC7B;EAEA,IAAIX,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAmB,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3B;EAEA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC/BnB,OAAA;MAAAmB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBvB,OAAA;MAAKwB,SAAS,EAAC,EAAE;MAAAL,QAAA,eACfnB,OAAA,CAACH,MAAM;QACL4B,OAAO,EAAE;UACPC,GAAG,EAAE,MAAM;UACXC,OAAO,EAAE,CAAC;UACVC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;YACX,GAAG,EAAE;cACHF,OAAO,EAAE;YACX,CAAC;YACD,GAAG,EAAE;cACHA,OAAO,EAAE;YACX;UACF;QACF,CAAE;QAAAR,QAAA,EAEDhB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE2B,GAAG,CAAEC,IAAS,IAAK;UACzB,oBACE/B,OAAA,CAACF,WAAW;YAAAqB,QAAA,eACVnB,OAAA,CAACJ,WAAW;cAAA,GAAmBmC;YAAI,GAAjBA,IAAI,CAACC,EAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa;UAAC,GADvBQ,IAAI,CAACC,EAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CAAC;QAElB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAnDQD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}