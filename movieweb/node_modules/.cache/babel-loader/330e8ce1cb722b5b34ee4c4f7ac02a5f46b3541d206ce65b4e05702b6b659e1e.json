{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usman\\\\Desktop\\\\webstack\\\\movieweb\\\\src\\\\Pages\\\\Home\\\\GenreMovies.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { genreList } from \"../../Components/genreList\";\nimport MoviePoster from \"../../Components/MoviePoster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenreMovies() {\n  _s();\n  let name = useParams();\n  let [movie, setMovie] = useState([]);\n  let obj = genreList.genres.find(i => {\n    return i.name === `${name.Gname}`;\n  });\n  async function getGenreMovies(id) {\n    let Api = await fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMBD_KEY}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&with_genres=${id}`);\n    let result = await Api.json();\n    setMovie(result.results);\n  }\n  console.log(movie);\n  useEffect(() => {\n    getGenreMovies(obj === null || obj === void 0 ? void 0 : obj.id);\n  }, [obj === null || obj === void 0 ? void 0 : obj.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        maxWidth: \"1500px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: movie === null || movie === void 0 ? void 0 : movie.map(data => {\n          return /*#__PURE__*/_jsxDEV(MoviePoster, {\n            ...data\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(GenreMovies, \"qUTewXKM1uOKQT3QTeurTa/upeo=\", false, function () {\n  return [useParams];\n});\n_c = GenreMovies;\nexport default GenreMovies;\nvar _c;\n$RefreshReg$(_c, \"GenreMovies\");","map":{"version":3,"names":["useEffect","useState","useParams","genreList","MoviePoster","jsxDEV","_jsxDEV","GenreMovies","_s","name","movie","setMovie","obj","genres","find","i","Gname","getGenreMovies","id","Api","fetch","process","env","REACT_APP_TMBD_KEY","result","json","results","console","log","children","className","style","maxWidth","map","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Usman/Desktop/webstack/movieweb/src/Pages/Home/GenreMovies.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { genreList } from \"../../Components/genreList\";\r\nimport MoviePoster from \"../../Components/MoviePoster\";\r\n\r\nfunction GenreMovies() {\r\n  let name = useParams();\r\n  let [movie, setMovie] = useState<any[]>([]);\r\n\r\n  let obj = genreList.genres.find((i) => {\r\n    return i.name === `${name.Gname}`;\r\n  });\r\n\r\n  async function getGenreMovies(id: any) {\r\n    let Api = await fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMBD_KEY}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc&with_genres=${id}`\r\n    );\r\n\r\n    let result = await Api.json();\r\n    setMovie(result.results);\r\n  }\r\n\r\n  console.log(movie);\r\n\r\n  useEffect(() => {\r\n    getGenreMovies(obj?.id);\r\n  }, [obj?.id]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-fluid\" style={{ maxWidth: \"1500px\" }}>\r\n        <div className=\"grid-container\">\r\n          {movie?.map((data: any) => {\r\n            return <MoviePoster key={data.id} {...data} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GenreMovies;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAeC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,SAAS,QAAQ,4BAA4B;AACtD,OAAOC,WAAW,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,IAAIC,IAAI,GAAGP,SAAS,CAAC,CAAC;EACtB,IAAI,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAQ,EAAE,CAAC;EAE3C,IAAIW,GAAG,GAAGT,SAAS,CAACU,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAK;IACrC,OAAOA,CAAC,CAACN,IAAI,KAAM,GAAEA,IAAI,CAACO,KAAM,EAAC;EACnC,CAAC,CAAC;EAEF,eAAeC,cAAcA,CAACC,EAAO,EAAE;IACrC,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAClB,uDAAsDC,OAAO,CAACC,GAAG,CAACC,kBAAmB,sGAAqGL,EAAG,EAChM,CAAC;IAED,IAAIM,MAAM,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAC7Bd,QAAQ,CAACa,MAAM,CAACE,OAAO,CAAC;EAC1B;EAEAC,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;EAElBV,SAAS,CAAC,MAAM;IACdiB,cAAc,CAACL,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEM,EAAE,CAAC;EACzB,CAAC,EAAE,CAACN,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEM,EAAE,CAAC,CAAC;EAEb,oBACEZ,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MAAKwB,SAAS,EAAC,iBAAiB;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAS,CAAE;MAAAH,QAAA,eAC7DvB,OAAA;QAAKwB,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAC5BnB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEuB,GAAG,CAAEC,IAAS,IAAK;UACzB,oBAAO5B,OAAA,CAACF,WAAW;YAAA,GAAmB8B;UAAI,GAAjBA,IAAI,CAAChB,EAAE;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAChD,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CAlCQD,WAAW;EAAA,QACPL,SAAS;AAAA;AAAAqC,EAAA,GADbhC,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}